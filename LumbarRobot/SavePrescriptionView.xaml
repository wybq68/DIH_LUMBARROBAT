<UserControl x:Class="LumbarRobot.SavePrescriptionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="768" d:DesignWidth="1366"
             Height="768" Width="1366">

    <UserControl.Resources>

        <!--项目按钮-->
        <Style x:Key="ProButton" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}"/>
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--前景色及边框-->
                            <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#333333">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#333333" Offset="0.5"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--按钮内容-->
                                <Border>
                                    <TextBlock x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding  Content}" FontFamily="黑体" FontSize="16" Foreground="White" FontStretch="UltraExpanded">
                                    </TextBlock>
                                </Border>
                            </Border>
                        </Border>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#99cc00" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#99cc00" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮失效-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#333333"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#333333" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                            <ColorAnimation To="#333333" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--文本样式1-->
        <Style x:Key="ContentCenterStyle"
               TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!--DataGrid样式开始-->
        <Style x:Key="DataGridStyle1" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#FFFFFF" />
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnHeaderHeight" Value="33"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="#333333"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Height" Value="50" />
                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                        <!--<Setter Property="Background">
                            <Setter.Value>
                                #cccccc
                            </Setter.Value>
                        </Setter>-->
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <!--最小宽度-->
                        <Setter Property="MinWidth" Value="60"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Foreground" Value="#666666"/>
                        <Setter Property="Background" Value="#FFFFFF" />
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="1,0,1,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" Value="#669900" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>
        <!--DataGrid样式结束-->

        <!--DataGrid样式，DataGridStyle-->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0" />
            <!--<Setter Property="Background" Value="#FFFFFF" />-->
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnHeaderHeight" Value="33"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Margin" Value="0"></Setter>
                        <Setter Property="Foreground" Value="#333333"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Height" Value="50" />
                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                        <Setter Property="MinWidth" Value="60"></Setter>
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                #cccccc
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}" Value="{x:Null}">
                                <Setter  Property="BorderThickness" Value="1,1,1,1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Foreground" Value="#666666"/>
                        <Setter Property="Background" Value="#FFFFFF" />
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Margin" Value="0"></Setter>
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" Value="#669900" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}" Value="{x:Null}">
                                <Setter  Property="BorderThickness" Value="1,0,1,1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>


        <!--滚动条样式开始-->
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#efefef" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#efefef" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />


        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#efefef" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBarLineButtonTop-->
        <Style x:Key="ScrollBarLineButtonTop" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/up.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBarLineButtonBot-->
        <Style x:Key="ScrollBarLineButtonBot" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/down.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBarLineButtonLeft-->
        <Style x:Key="ScrollBarLineButtonLeft" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
                             Width="42"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/left.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBarLineButtonRight-->
        <Style x:Key="ScrollBarLineButtonRight" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
                            Width="42"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/right.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--垂直滑块-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border>
                            <Grid>
                                <Border>
                                    <Border.Background>
                                        <!--头部图片-->
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="Gray" Offset="0.7"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--水平滑块-->
        <Style x:Key="ScrollBarHorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border>
                            <Grid>
                                <Border>
                                    <Border.Background>
                                        <!--头部图片-->
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="Gray" Offset="0.7"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--垂直-->
        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">

            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="23"/>
                    <RowDefinition />
                    <RowDefinition MaxHeight="23"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      Grid.Row="0"
      CornerRadius="0"
      Background="Transparent" />
                <RepeatButton
            		Grid.Row="0"
            		Style="{StaticResource ScrollBarLineButtonTop}"
            		Height="23"
            		Command="ScrollBar.LineUpCommand" VerticalAlignment="Top"
      d:LayoutOverrides="Height"
      />

                <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Width="38"
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                          Style="{StaticResource ScrollBarThumb}"  BorderBrush="{StaticResource HorizontalNormalBorderBrush}">
                        </Thumb>
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Width="38"
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
            		Grid.Row="2"
            		Style="{StaticResource ScrollBarLineButtonBot}"
            		Height="23"
            		Command="ScrollBar.LineDownCommand" d:LayoutOverrides="Height, GridBox" VerticalAlignment="Bottom"
      />
            </Grid>
        </ControlTemplate>
        <!--水平-->
        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid Height="35" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="35"/>
                    <ColumnDefinition />
                    <ColumnDefinition MaxWidth="35"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="0"
      Background="#efefef" />
                <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButtonLeft}"
      Width="35"
                    Height="35"
      Command="ScrollBar.LineLeftCommand"
       />
                <Track
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                          Style="{StaticResource ScrollBarHorizontalThumb}"  BorderBrush="{StaticResource HorizontalNormalBorderBrush}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButtonRight}"
      Width="23"
                    Height="35"
      Command="ScrollBar.LineRightCommand"
      />
            </Grid>
        </ControlTemplate>
        <!--双向Bar-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="42" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="42"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--双向-->
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
            Grid.Column="1"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Margin="0,0,-0.5,0" HorizontalAlignment="Right" d:LayoutOverrides="Width"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚动条样式结束-->


        <!---->
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="700" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Background="Black" Opacity="0.45"></Grid>
        <Grid Background="Black" Opacity="0.45" Grid.Row="2"></Grid>
        <Grid Grid.Row="1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="1200" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
           
             <Grid Background="Black" Opacity="0.45"></Grid>
             <Grid Background="Black" Opacity="0.45" Grid.Column="2"></Grid>
             <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                   <RowDefinition Height="42" />
                   <RowDefinition />
                </Grid.RowDefinitions>
           
                 <Grid>
                    <Grid.Background>
                        <ImageBrush ImageSource="/images/bgdetail.png"></ImageBrush>
                    </Grid.Background>
        <!--保存处方-->
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,6" Width="100">
            <Button Name="btnSavePrescription"  Style="{DynamicResource ProButton}" Content="确 定" Margin="10,0" Height="30" Width="80" Visibility="Visible" Click="btnSavePrescription_Click">

            </Button>
        </StackPanel>
        <!--关闭-->
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right">
            <Button Name="btnClosed" Margin="0,0,20,0" Click="btnClosed_Click">

                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <ContentControl Name="cc">
                            <Image Source="/images/closed.png" Height="30" Width="30" />
                        </ContentControl>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <DataGrid Name="gvDetail"  Style="{StaticResource DataGridStyle}" ItemsSource="{Binding Entity}" SelectionMode="Single"  Width="Auto" >
                <DataGrid.Columns>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="治疗名称" Width="170"  IsReadOnly="True"  Binding="{Binding ActionName}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="模式" Width="105"  IsReadOnly="True"  Binding="{Binding ModeName}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="力量" Width="100"  IsReadOnly="True"  Binding="{Binding PForce}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="速度" Width="100"   IsReadOnly="True" Binding="{Binding Speed}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="最大角度" Width="100"  IsReadOnly="True"  Binding="{Binding MaxAngle}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="最小角度" Width="100"  IsReadOnly="True"  Binding="{Binding MinAngle}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="分组" Width="100"  IsReadOnly="True"  Binding="{Binding PGroup}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="应训次数" Width="100"  IsReadOnly="True"  Binding="{Binding Times}"/>
                    <DataGridTextColumn ElementStyle="{StaticResource ContentCenterStyle}" CanUserSort="False" Header="初始位置" Width="100"  IsReadOnly="True"  Binding="{Binding LastLocation}"/>
                    <DataGridTemplateColumn Header="编辑操作" Width="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding Path=Edit}" Click="BtnEdit_Click" Tag="{Binding Id}"  Style="{StaticResource ProButton}" Width="60" Height="20">修改</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="删除操作" Width="90">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding Path=Del}" Click="Button_Click" Tag="{Binding Id}"  Style="{StaticResource ProButton}" Width="60" Height="20">删除</Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        </Grid>
        </Grid>
    </Grid>
</UserControl>
