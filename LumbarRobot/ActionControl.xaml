<UserControl x:Class="LumbarRobot.ActionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:interactionRequest="clr-namespace:LumbarRobot.Common"
             mc:Ignorable="d" 
             xmlns:prismRequest="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity"
             xmlns:interactions="clr-namespace:LumbarRobot.Interactions"
             xmlns:interactionRequest1="clr-namespace:LumbarRobot"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:my="clr-namespace:LumbarRobot.MyUserControl"
             d:DesignHeight="700" d:DesignWidth="1200"
             Height="750" Width="1200" xmlns:my1="clr-namespace:LumbarRobot.ActionUserControl" Unloaded="UserControl_Unloaded" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <interactionRequest:ImgSourceConvert x:Key="imgcov"></interactionRequest:ImgSourceConvert>
        <!--主动按钮-->
        <Style x:Key="ProButtonFree" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="62" Width="132">
                                <Image x:Name="imageNoChecked" Source="/images/主动_0.png"  Height="62" Width="132"   />
                                <Image x:Name="imageChecked" Source="/images/主动_1.png" Height="62" Width="132" />
                            </Grid>
                            <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>

                        <ControlTemplate.Triggers >
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--旋转按钮-->
        <Style x:Key="ProButtonPBFit" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="62" Width="132">
                                <Image x:Name="imageNoChecked" Source="/images/旋转_0.png"  Height="62" Width="132"   />
                                <Image x:Name="imageChecked" Source="/images/旋转_1.png" Height="62" Width="132" />
                            </Grid>
                            <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>

                        <ControlTemplate.Triggers >
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--曲伸按钮-->
        <Style x:Key="ProButtonRotationFit" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="62" Width="132">
                                <Image x:Name="imageNoChecked" Source="/images/曲伸_0.png"  Height="62" Width="132"   />
                                <Image x:Name="imageChecked" Source="/images/曲伸_1.png" Height="62" Width="132" />
                            </Grid>
                            <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>

                        <ControlTemplate.Triggers >
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--清零按钮-->
        <Style x:Key="ProButtonClearGeocoder" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <StackPanel Orientation="Horizontal">
                            <Grid Height="62" Width="132">
                                <Image x:Name="imageNoChecked" Source="/images/清零_0.png"  Height="62" Width="132"   />
                                <Image x:Name="imageChecked" Source="/images/清零_1.png" Height="62" Width="132" />
                            </Grid>
                            <Label Content="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>

                        <ControlTemplate.Triggers >
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Visible" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="imageChecked" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="imageNoChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--项目按钮-->
        <Style x:Key="ProButton" TargetType="Button">
            <Setter Property="Foreground" Value="white"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}"/>
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--前景色及边框-->
                            <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#333333">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#333333" Offset="0.5"/>
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!--按钮内容-->
                                <Border>
                                    <TextBlock x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding  Content}" FontFamily="黑体" FontSize="16" Foreground="White" FontStretch="UltraExpanded">
                                    </TextBlock>
                                </Border>
                            </Border>
                        </Border>
                        <!--触发器-->
                        <ControlTemplate.Triggers>
                            <!--鼠标移入移出-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#99cc00" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮按下弹起-->
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#99cc00" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <!--按钮失效-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#333333"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <ColorAnimation To="#333333" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                            <ColorAnimation To="#333333" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)"/>
                                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--img 背景色显示效果-->
        <Style TargetType="ListBoxItem">
            <Style.Resources>
                <!--SelectedItem with focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#eeeeee" Opacity="0"/>
                <!--SelectedItem without focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#eeeeee" Opacity="0"/>
            </Style.Resources>
        </Style>

        <!--文本样式1-->
        <Style x:Key="ContentCenterStyle"
               TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!--DataGrid样式开始-->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#FFFFFF" />
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnHeaderHeight" Value="33"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="#333333"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                #cccccc
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <!--最小宽度-->
                        <Setter Property="MinWidth" Value="60"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Foreground" Value="#666666"/>
                        <Setter Property="Background" Value="#FFFFFF" />
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="#d6d6d6"/>
                        <Setter Property="BorderThickness" Value="1,0,1,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" Value="#669900" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>
        <!--DataGrid样式结束-->

        <!--滚动条样式开始-->
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#efefef" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#efefef" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />


        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#efefef" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBarLineButtonTop-->
        <Style x:Key="ScrollBarLineButtonTop" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/up.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBarLineButtonBot-->
        <Style x:Key="ScrollBarLineButtonBot" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/down.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBarLineButtonLeft-->
        <Style x:Key="ScrollBarLineButtonLeft" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
          Width="35"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/left.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollBarLineButtonRight-->
        <Style x:Key="ScrollBarLineButtonRight" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          x:Name="Border"
          Margin="1"
          CornerRadius="2"
                            Width="42"
          
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/images/right.png"></ImageBrush>
                            </Border.Background>
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border>
                            <Grid>
                                <Border>
                                    <Border.Background>
                                        <!--头部图片-->
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Color="Gray" Offset="0.7"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--垂直-->
        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">

            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="23"/>
                    <RowDefinition />
                    <RowDefinition MaxHeight="23"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      Grid.Row="0"
      CornerRadius="0"
      Background="Transparent" />
                <RepeatButton
            		Grid.Row="0"
            		Style="{StaticResource ScrollBarLineButtonTop}"
            		Height="23"
            		Command="ScrollBar.LineUpCommand" VerticalAlignment="Top"
      d:LayoutOverrides="Height"
      />

                <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Width="38"
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                          Style="{StaticResource ScrollBarThumb}"  BorderBrush="{StaticResource HorizontalNormalBorderBrush}">
                        </Thumb>
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Width="38"
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
            		Grid.Row="2"
            		Style="{StaticResource ScrollBarLineButtonBot}"
            		Height="23"
            		Command="ScrollBar.LineDownCommand" d:LayoutOverrides="Height, GridBox" VerticalAlignment="Bottom"
      />
            </Grid>
        </ControlTemplate>
        <!--水平-->
        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid Height="35" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="35"/>
                    <ColumnDefinition />
                    <ColumnDefinition MaxWidth="35"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="0"
      Background="#efefef" />
                <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButtonLeft}"
      Width="23"
      Height="35"
      Command="ScrollBar.LineLeftCommand"
       />
                <Track
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          BorderBrush="{StaticResource NormalBorderBrush}">

                            <Thumb.Background>
                                <ImageBrush ImageSource="/images/bar1.png"  />
                            </Thumb.Background>

                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButtonRight}"
      Width="35"
                    Height="35"
      Command="ScrollBar.LineRightCommand"
      />
            </Grid>
        </ControlTemplate>
        <!--双向Bar-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="42" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="42"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--双向-->
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
            Grid.Column="1"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Margin="0,0,-0.5,0" HorizontalAlignment="Right" d:LayoutOverrides="Width"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--滚动条样式结束-->
    </UserControl.Resources>
    <Grid>

        <i:Interaction.Triggers>

            <prismRequest:InteractionRequestTrigger SourceObject="{Binding NotificationToAlarm}">
                <interactions:AlarmInteractionAction>
                    <interactions:AlarmInteractionAction.Dialog>
                        <interactionRequest1:AlarmDialog_New />
                    </interactions:AlarmInteractionAction.Dialog>
                </interactions:AlarmInteractionAction>
            </prismRequest:InteractionRequestTrigger>

        </i:Interaction.Triggers>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="225" />
            <ColumnDefinition />

        </Grid.ColumnDefinitions>
        <Grid Name="gridPanel" Background="#cecece">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Margin="6,0,0,0" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition  Height="27" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <TextBlock Name="tbAction" Text="动作" FontFamily="Microsoft YaHei" Foreground="#FF656565" FontSize="16" Margin="7,0,0,0" Width="203"></TextBlock>
                    </Grid>
                    <ComboBox Name="CboAction" Grid.Row="1" Height="51" Width="196" FontSize="16" FontFamily="Microsoft YaHei" Foreground="#666666" SelectionChanged="CboAction_SelectionChanged">

                        <ComboBoxItem Content="请选择动作"  Tag="SelectAction"   />
                        <ComboBoxItem Content="旋转"  Tag="Rotation"   />
                        <ComboBoxItem Content="前屈" Tag="Protrusive " />
                        <ComboBoxItem Content="后伸"  Tag="Bend" />
                        <ComboBoxItem Content="前屈后伸"  Tag="ProtrusiveOrBend" />
                    </ComboBox>
                </Grid>
            </StackPanel>
            <StackPanel Margin="6,0,0,0" Grid.Row="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition  Height="27" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <TextBlock Name="tbTitle" Text="训练模式" FontFamily="Microsoft YaHei" Foreground="#FF656565" FontSize="16" Margin="7,0,0,0" Width="203"></TextBlock>
                    </Grid>
                    <ComboBox Name="CboMode" Grid.Row="1" Height="51" Width="196" FontSize="16" FontFamily="Microsoft YaHei" Foreground="#666666" >
                        <ComboBoxItem Content="请选择模式"  Tag="SelectMode"    />
                        <ComboBoxItem Content="被动运动模式"  Tag="Guided"    />
                        <ComboBoxItem Content="助动运动"  Tag="Initiated"/>
                        <ComboBoxItem Content="向心运动模式" Tag="FreeCounterWeight" />
                        <ComboBoxItem Content="离心运动模式" Tag="Lixin" />
                        <!--<ComboBoxItem Content="等张运动模式"  Tag="FreeConstantResistance" />-->
                        <ComboBoxItem Content="等长运动模式" Tag="IsotonicA" />
                        <ComboBoxItem Content="协调性训练模式"  Tag="IsotonicB" />
                        <ComboBoxItem Content="等速运动模式" Tag="Dengsu" />
                    </ComboBox>
                </Grid>
            </StackPanel>
            <StackPanel Margin="2,0,0,0"  Grid.Row="2">
                <my:SetControl x:Name="setControlForce"  MinValue="0" IsEnabled="False"  MaxValue="12" Step="1" Value="3"   ContextText="力量"  Height="77" ></my:SetControl>
            </StackPanel>
            <StackPanel Margin="2,0,0,0" Grid.Row="3">
                <my:SetControl x:Name="setControlMinAngle"  MinValue="-20" IsEnabled="False"  MaxValue="30" Step="1" Value="-20"   ContextText="最小角度"  Height="77"></my:SetControl>
            </StackPanel>
            <StackPanel Margin="2,0,0,0" Grid.Row="4" >
                <my:SetControl x:Name="setControlMaxAngle"  MinValue="0" IsEnabled="False"  MaxValue="90" Step="1" Value="20"   ContextText="最大角度"  Height="77" ></my:SetControl>
            </StackPanel>
            <StackPanel Margin="2,0,0,0"  Grid.Row="5">
                <my:SetControl x:Name="setControlSpeed"  MinValue="1" IsEnabled="False"  MaxValue="10" Step="1" Value="2"   ContextText="速度"  Height="77"></my:SetControl>
            </StackPanel>
            <StackPanel Margin="6,0,0,0" Grid.Row="6" >
                <my:SetControl   x:Name="setControlGroup"  MinValue="1"  MaxValue="30" Step="1"  Value="1"  ContextText="分组"  Height="77" ></my:SetControl>
            </StackPanel>
            <StackPanel Margin="6,0,0,0" Grid.Row="7" >
                <my:SetControl   x:Name="setControlTimes"  MinValue="1"  MaxValue="100" Step="1"  Value="5"  ContextText="次数"  Height="77" ></my:SetControl>
            </StackPanel>

            <StackPanel Margin="2,0,0,0" Grid.Row="8" >
                <my:SetControl x:Name="setControlPosition"  MinValue="-30" IsEnabled="False"  MaxValue="60" Step="5" Value="0"   ContextText="初始位置"  Height="77" ></my:SetControl>
            </StackPanel>


            <ListBox Name="MyActionListBox" Visibility="Collapsed"  Background="#eeeeee"  Margin="8,3" SelectionMode="Single" ItemsSource="{Binding }"  SelectionChanged="MyActionListBox_SelectionChanged" >
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <WrapPanel Orientation="Horizontal" IsItemsHost="True" ScrollViewer.CanContentScroll="True"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Height="92" Width="110">
                            <Image Name="myActionImg" Source="{Binding Path=PicturePath,Converter={StaticResource imgcov}}" Cursor="Hand"  Height="83" Width="95" Margin="0,10">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <!--,Converter=imgcov-->
                            <Image Source="{Binding Path=PicturePath}"  Cursor="Hand" Height="83" Width="95" Margin="0,10">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                            <TextBlock  Foreground="#999999" FontSize="12"   FontFamily="Microsoft YaHei" IsHyphenationEnabled="True" Padding="10,0"  TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=ActionName}" Margin="0,-28,0,0" Width="105" >
                                                         <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                            </TextBlock>

                            <TextBlock  Foreground="#FFFFFF" FontSize="12"   FontFamily="Microsoft YaHei" IsHyphenationEnabled="True" Padding="10,0"  TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=ActionName}" Margin="0,-28,0,0" Width="105" >
                                                          <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                            </TextBlock>
                            <TextBox FontSize="12"  Text="{Binding Path=Id}"  Width="1"></TextBox>
                            <!--<Button x:Name="btnMyAction"  Cursor="Hand" Margin="80,-230,0,20"
                                                            Background="#eeeeee"   Tag="{Binding Id}" Click="btnMyAction_Click" >
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <ContentControl Name="cc">
                                            <Image Source="/images/closed.png" Width="28" Height="28" />
                                        </ContentControl>
                                    </ControlTemplate>
                                </Button.Template>

                            </Button>-->

                        </StackPanel>

                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <Grid Grid.Column="1" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="315*" />
                <RowDefinition Height="240" />
                <RowDefinition Height="75" />
                <RowDefinition Height="80" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="2" Margin="74,22,58,0">
                <my:ControlPanel x:Name="playBtn"  VerticalAlignment="Bottom" Margin="0,0,0,42">

                </my:ControlPanel>
            </Grid>
            <Grid Background="#bbbbbb" Grid.Row="3" Visibility="Visible">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                
                <Button Content="故障清零" Name="btnClearBreakdown" Click="btnClearBreakdown_Click" Grid.Row="1" Style="{StaticResource ProButton}" Width="132" Height="62" Grid.Column="0"  />
                <Button Content="传感器清零" x:Name="btnClearGeocoder" Click="btnClearGeocoder_Click" Style="{StaticResource ProButtonClearGeocoder}" Grid.Row="1"  Width="132" Height="62" Grid.Column="1"  />
                <Button Content="主动" Name="btnActionFree" Click="btnActionFree_Click" Grid.Row="1" Style="{StaticResource ProButtonFree}" Width="132" Height="62"  Grid.Column="2" />
                <Button Content="曲伸Fit" x:Name="btnPBFit" Style="{StaticResource ProButtonRotationFit}" Grid.Row="1"  Width="132" Height="62" Grid.Column="3" Click="btnFit_Click" />
                <Button Content="旋转Fit" x:Name="btnRotationFit" Grid.Row="1" Style="{StaticResource ProButtonPBFit}" Width="132" Height="62" Grid.Column="4" Click="btnRotationFit_Click" />
                <Button Content="返  回" Name="btnCancel" Click="btnCancel_Click" Grid.Row="1" Style="{StaticResource ProButton}" Width="132" Height="62" Grid.Column="5"  />
            </Grid>
            <StackPanel> 
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="207"  />
                        <ColumnDefinition Width="314" />
                        <ColumnDefinition Width="449*" />
                    </Grid.ColumnDefinitions>
                    <Grid  VerticalAlignment="Top" Height="284" Grid.Column="1" Margin="0,15,0,0" Name="gridParam" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="84" />
                            <ColumnDefinition Width="123" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="当前动作:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="下一动作:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="次       数:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="2" VerticalAlignment="Center"></TextBlock>
                        <!--<TextBlock Text="模       式:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="力       量:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="2" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="速       度:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="3" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="次       数:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="4" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="最大角度:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="5" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="最小角度:"  Foreground="#FF656565" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="6" VerticalAlignment="Center"></TextBlock>-->

                        <TextBlock x:Name="txtAction"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtNextAction"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtTimes"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <Label Grid.Row="6" Height="28" HorizontalAlignment="Left" Margin="6,13,0,0" Name="UPLable" VerticalAlignment="Top" Width="62" />
                        <!--<TextBlock x:Name="txtMode"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtForce"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtSpeed"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtTimes"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="4" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtMaxAngle"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="5" Grid.Column="1" VerticalAlignment="Center"></TextBlock>
                        <TextBlock x:Name="txtMinAngle"  Foreground="#FF000000" FontFamily="Microsoft YaHei" FontSize="18" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center"></TextBlock>-->

                    </Grid>
                        <my1:Eilelc2 HorizontalAlignment="Left" Grid.Column="2" x:Name="eilelc21" VerticalAlignment="Top" Width="310" Height="310" ElicleColor="#FFE48638" FltColor="#FA158F1A" OutBackColor="#FFE48638" OutFltColor="#FFEFCD12"  RunColor="#FA158F1A" FltColor1="#FF1A76BC" BackMinusValu="-89" BackMinusValu1="-90" BackValue="60" BackValue1="70" Background="{x:Null}" FltMinusValue="0" Focusable="False" BackColor="#FA158F1A" Margin="0,-4,0,0" />

                    <StackPanel Grid.Column="3" Margin="0,0,307,11">
                        <my1:UserLine x:Name="userLine1" Width="140" Height="300" />
                    </StackPanel>

                </Grid>
            </StackPanel>

            <Grid  Background="#FFFFFF" Visibility="Hidden"  x:Name="SetVidicon"  Grid.Row="2" Grid.RowSpan="2" Margin="0,22,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                    <TextBlock Text="正在进行Fit，完成后点击确定！" x:Name="txtMsg"  Foreground="Red" FontFamily="Microsoft YaHei" FontSize="24" TextAlignment="Center" Width="428" Margin="274,7,274,20"></TextBlock>
                    <Button Content="再测一次" Name="btnNext" Style="{StaticResource ProButton}" Width="131" Height="62" Margin="236,58,608,13" Grid.RowSpan="2" Click="btnNext_Click" />
                    <Button Content="完  成" Name="btnAffirm" Click="btnAffirm_Click" Style="{StaticResource ProButton}" Width="131" Height="62" Margin="410,59,434,12" Grid.RowSpan="2" />
                    <Button Content="取  消" Name="btnCancel2" Click="btnCancel2_Click" Style="{StaticResource ProButton}" Width="131" Height="62" Margin="582,59,262,12" Grid.RowSpan="2" />
                <Label Height="28" HorizontalAlignment="Left" Margin="6,7,0,0" Name="Downlabel" VerticalAlignment="Top" Width="56" />
            </Grid>
            <my1:TimeSina HorizontalAlignment="Left" Margin="5,312,0,0" x:Name="sinWpf1" VerticalAlignment="Top" Height="309" Width="964" BacklineColor="#E6796C19" BorderBrush="#FF20C120" BorderThickness="1" Background="#000CED1D" MaxArc="49" OverridesDefaultStyle="True" Grid.RowSpan="3" />
        </Grid>
        <Grid Grid.Column="1" Margin="666,0,0,457">
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition Width="60" />
                </Grid.ColumnDefinitions>
                <!--<Button Name="btnStop" Grid.Column="1" Style="{DynamicResource ProButton}" Content="停止" Height="60" Width="140" Click="btnStop_Click" />
                                <Button Name="btnFree"  Grid.Column="2" Style="{DynamicResource ProButton}" Content="主动" Height="60" Width="140" Click="btnFree_Click" />-->
            </Grid>
            <TextBlock x:Name="txtPrompt" Text="提示信息" Grid.Row="1" Foreground="Red" FontFamily="Microsoft YaHei" FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Height="205" Width="309" Margin="0,5,0,-67" TextWrapping="Wrap"></TextBlock>
        </Grid>
    </Grid>
</UserControl>
