<UserControl x:Class="LumbarRobot.MyUserControl.SearchPatient"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"     
             mc:Ignorable="d" 
             xmlns:my="clr-namespace:LumbarRobot.MyUserControl"
             d:DesignHeight="680" d:DesignWidth="273">


    <UserControl.Resources>

        <!--搜索开始-->
        <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="MaxWidth" Value="480"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="MaxHeight" Value="150"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Background" Value="#333333" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Padding" Value="8,15,3,3" />
            <!--自动换行-->
            <Setter Property="TextWrapping"  Value="Wrap" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#ececec" Offset="0.1"/>
                        <GradientStop Color="#c9c8c8" Offset="0.375"/>
                        <GradientStop Color="#c9c8c8" Offset="0.375"/>
                        <GradientStop Color="#ececec" Offset="0.1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="BorderBase" Background="#333333" BorderThickness="0" 
                            BorderBrush="Silver" CornerRadius="3"  />
                            <Label x:Name="TextPrompt" Content="{TemplateBinding Tag}" Visibility="Collapsed" FontFamily="Microsoft YaHei" FontSize="16"
                                   Focusable="False" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#999999" Padding="10,15"></Label>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"  />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"></Condition>
                                    <Condition Property="Text" Value=""></Condition>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"></Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderThickness" TargetName="BorderBase" Value="0"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--搜索结束-->

        <!--DataGridStyle-->
        <!--文本样式1-->
        <Style x:Key="ContentCenterStyle"
               TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <!--文本样式2-->
        <Style x:Key="ContentCenterStyle1"
               TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <!--<Setter Property="Foreground" Value="#999999" />-->
        </Style>
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0,0,0.5,0" />
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Background" Value="#ababab" />
            <!--获取或设置一个值列是否自动创建-->
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnHeaderHeight" Value="49"/>
            <!--获取或设置一个值用户是否可以从 DataGrid删除行。-->
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <!--获取或设置一个值用户是否可以将新行添加到 DataGrid。-->
            <Setter Property="CanUserAddRows" Value="False"/>
            <!--是否允许调整列宽-->
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <!--是否允许拖拽改变列的位置-->
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <!--获取或设置用于绘制奇数行背景的-->
            <!--<Setter Property="AlternatingRowBackground" Value="#ebecee"/>-->
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="Margin" Value="1,0,1,0"/>-->
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="#666666"/>
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontFamily" Value="SimHei"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#f9f9f9" Offset="0.3"/>
                                    <GradientStop Color="#dbdbdb" Offset="0.6"/>
                                    <GradientStop Color="#bcbcbc" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush" Value="#a9a9a9"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="MinWidth" Value="90"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="49"/>
                        <Setter Property="FontFamily" Value="Microsoft YaHei" />
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Foreground" Value="#000000"/>
                        <Setter Property="Background" Value="#ececec" />
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#000000" Offset="0"/>
                                            <GradientStop Color="#111111" Offset="1"/>
                                            <GradientStop Color="#222222" Offset="0.1"/>
                                            <GradientStop Color="#333333" Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle" >
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderBrush" Value="#b3b3b3"/>
                        <Setter Property="BorderThickness" Value="0,0,0,0.5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" Value="#8eb800" />
                                <Setter Property="Foreground" Value="#000000"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>
    </UserControl.Resources>

    <Grid Background="#d9d9d9" Height="680" Width="273" >
        <Grid.RowDefinitions>
            <RowDefinition Height="52" />
            <RowDefinition Height="6"/>
            <RowDefinition />
            <RowDefinition Height="70"/>
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Grid>
                <Image Source="/images/Search.png" Height="49" Width="268" />
                <TextBox Name="txtPatientName" Tag="请输入患者名称" Style="{DynamicResource SearchTextBox}"   Height="49" Width="220" Margin="4,0,49,0" PreviewMouseDown="btnWhereStr_PreviewMouseDown" LostFocus="txtQuery_LostFocus" TextChanged="txtPatientName_TextChanged">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding WhereStrBtnCommand}" CommandParameter="{Binding Text,  ElementName=txtPatientName}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                </TextBox>
            </Grid>
        </StackPanel>
        <Grid Grid.Row="2">
            <DataGrid x:Name="dg" SelectionMode="Single" Style="{StaticResource DataGridStyle}" Width="268" SelectionChanged="dg_SelectionChanged" >
                <DataGrid.Columns>
                    <!--CanUserSort="False"-->
                    <DataGridTextColumn  CanUserSort="False"  ElementStyle="{StaticResource ContentCenterStyle}"  IsReadOnly="True" Width="135" Binding="{Binding UserName}" >
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Height" Value="49" />
                                <Setter Property="Foreground" Value="#666666"/>
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontFamily" Value="SimHei"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#f9f9f9" Offset="0.3"/>
                                            <GradientStop Color="#dbdbdb" Offset="0.6"/>
                                            <GradientStop Color="#bcbcbc" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="#a9a9a9"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="MinWidth" Value="135"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>

                                <Setter  Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid Width="135">
                                                <Image x:Name="patient" Source="/images/patient_0.png"  Width="135" HorizontalAlignment="Left"  Tag="patient">

                                                    <!--<i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.PatientSortBtnCommand}" CommandParameter="UserName" ></i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>-->
                                                </Image>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  ElementStyle="{StaticResource ContentCenterStyle1}" IsReadOnly="True" Width="133" Binding="{Binding LastTime,StringFormat='{}{0:yyyy-MM-dd}',ConverterCulture=zh-CN}">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Height" Value="49" />
                                <Setter Property="Foreground" Value="#666666"/>
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontFamily" Value="SimHei"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#f9f9f9" Offset="0.3"/>
                                            <GradientStop Color="#dbdbdb" Offset="0.6"/>
                                            <GradientStop Color="#bcbcbc" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="#a9a9a9"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="MinWidth" Value="90"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter  Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                            <Grid>
                                                <Image x:Name="lately"   Source="/images/lately_0.png"  HorizontalAlignment="Left" Tag="lately">

                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                            <i:InvokeCommandAction Command="{Binding RelativeSource={ RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.PatientSortBtnCommand}" CommandParameter="LastTime"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Image>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>


            </DataGrid>
        </Grid>
        <Grid Grid.Row="3">

            <my:Pager x:Name="pager" PageSize="{Binding PageSize,Mode=TwoWay}" PageCurrent="{Binding PageCurrent, Mode=TwoWay}" NMax="{Binding TotalCount,Mode=TwoWay}" FristClick="pager_FristClick" NextClick="pager_NextClick" PrevClick="pager_PrevClick" EndClick="pager_EndClick">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PrevClick">
                        <i:InvokeCommandAction Command="{Binding PrevBtnCommand}" CommandParameter="{Binding ElementName=pager}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="FristClick">
                        <i:InvokeCommandAction Command="{Binding FristBtnCommand}" CommandParameter="{Binding ElementName=pager}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="NextClick">
                        <i:InvokeCommandAction Command="{Binding NextBtnCommand}" CommandParameter="{Binding ElementName=pager}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="EndClick">
                        <i:InvokeCommandAction Command="{Binding EndBtnCommand}" CommandParameter="{Binding ElementName=pager}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </my:Pager>
        </Grid>
        <Grid Grid.Row="4" >
            <Button Width="263" Height="48" Click="btnAddPatient_Click" Name="btnAddPatient">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <ContentControl Name="cc">
                            <Image Source="/images/add.png" />
                        </ContentControl>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </Grid>
</UserControl>